#!/usr/bin/env sh

while getopts "dp" parm; do case $parm in
	d) deploydotfiles="y" ;;
	p) installprogsfile="y" ;;
	*) printf "Invalid option: -%s\\n" && exit ;;
esac done



### FUNCTIONS ###
putgitrepo() { # Downloads a gitrepo $1 and places the files in $2 only overwriting conflicts.
	[ -z "$name" ] || [ -z "$dotfilesrepo" ] || exit
	[ -z "$3" ] && branch="master" || branch="$repobranch"
	dir=$(mktemp -d)
	[ ! -d "$2" ] && mkdir -p "$2"
	chown -R "$name":wheel "$dir" "$2"
	sudo -u "$name" git clone -b "$branch" --depth 1 "$1" "$dir" >/dev/null 2>&1
	sudo -u "$name" cp -rfT "$dir" "$2"
}

manualinstall() { # Installs $1 manually if not installed. Used only for AUR helper here.
	[ -f "/usr/bin/$1" ] || (
	printf "Installing $1\n"
	cd /tmp || exit
	rm -rf /tmp/"$1"*
	curl -sO https://aur.archlinux.org/cgit/aur.git/snapshot/"$1".tar.gz &&
	sudo -u "$name" tar -xvf "$1".tar.gz >/dev/null 2>&1 &&
	cd "$1" &&
	sudo -u "$name" makepkg --noconfirm -si >/dev/null 2>&1
	cd /tmp || return)
}

maininstall() { # Installs all needed programs from main repo.
	printf "Installing \`$1\` ($n of $total). $1 $2\n"
	pacman -S "$1"
}

gitmakeinstall() { # Installs programs from source that have makefile.
	progname="$(basename "$1")"
	dir="$repodir/$progname"
	printf "Installing \`$progname\` ($n of $total) via \`git\` and \`make\`. $(basename "$1") $2\n"
	sudo -u "$name" git clone --depth 1 "$1" "$dir" >/dev/null 2>&1 || { cd "$dir" || return ; sudo -u "$name" git pull --force origin master;}
	cd "$dir" || exit
	make >/dev/null 2>&1
	make install >/dev/null 2>&1
	cd /tmp || return
}

aurinstall() { # Installs aur helper and installs programs from aur using aur helper.
	manualinstall yay
	printf "Installing \`$1\` ($n of $total) from the AUR. $1 $2\n"
	sudo -u "$name" $aurhelper -S --noconfirm "$1" >/dev/null 2>&1
}

pipinstall() { \
	printf "Installing the Python package \`$1\` ($n of $total). $1 $2\n"
	command -v pip || installpkg python-pip >/dev/null 2>&1
	yes | pip install "$1"
}

installationloop() { \
	([ -f "$progsfile" ] && cp "$progsfile" /tmp/progs.csv) || break
	total=$(wc -l < /tmp/progs.csv)
	aurinstalled=$(pacman -Qqm)
	while IFS=, read -r tag program comment; do
		n=$((n+1))
		echo "$comment" | grep "^\".*\"$" >/dev/null 2>&1 && comment="$(echo "$comment" | sed "s/\(^\"\|\"$\)//g")"
		case "$tag" in
			"A") aurinstall "$program" "$comment" ;;
			"G") gitmakeinstall "$program" "$comment" ;;
			"P") pipinstall "$program" "$comment" ;;
			*) maininstall "$program" "$comment" ;;
		esac
	done < /tmp/progs.csv
}

### ACTUAL SCRIPT ###

# Release custom dotfiles if specified
[ "$deploydotfiles" = "y" ] && \
putgitrepo "$dotfilesrepo" "/home/$name" "$repobranch" && \
rm -f "/home/$name/README.md" "/home/$name/LICENSE"

# Install Programs from progs.csv
[ "$installprogsfile" = "y" ] && installationloop
